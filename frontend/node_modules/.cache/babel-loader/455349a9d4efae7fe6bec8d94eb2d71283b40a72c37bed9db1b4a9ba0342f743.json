{"ast":null,"code":"var _jsxFileName = \"D:\\\\meeting_bot\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MeetingForm from './components/MeetingForm';\nimport StatusMessage from './components/StatusMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [status, setStatus] = useState('');\n  const handleJoinMeeting = link => {\n    // Check if the link is valid for Google Meet or Microsoft Teams\n    const isGoogleMeet = link.includes('https://meet.google.com/');\n    const isMicrosoftTeams = link.includes('https://teams.microsoft.com/');\n    if (isGoogleMeet || isMicrosoftTeams) {\n      // Set success message if valid\n      setStatus('Bot has successfully joined the meeting.');\n    } else {\n      // Reset the status in case of invalid links\n      setStatus('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      minHeight: \"100vh\",\n      backgroundImage: \"url('/images/background.jpg')\",\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n      backgroundRepeat: \"no-repeat\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        position: \"relative\",\n        zIndex: 2,\n        backgroundColor: \"rgba(255, 255, 255, 0.9)\",\n        borderRadius: \"10px\",\n        padding: \"40px\",\n        maxWidth: \"600px\",\n        margin: \"100px auto\",\n        boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.25)\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: \"2.5rem\",\n          fontWeight: \"bold\",\n          color: \"#333\"\n        },\n        children: \"Meeting Bot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"1.2rem\",\n          color: \"#555\",\n          marginBottom: \"20px\"\n        },\n        children: \"Paste your meeting link below to let the bot join the meeting.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MeetingForm, {\n        onSubmit: handleJoinMeeting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), status && /*#__PURE__*/_jsxDEV(StatusMessage, {\n        message: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"KPYrX9LquK4QzAleGVocmTfvvco=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MeetingForm","StatusMessage","jsxDEV","_jsxDEV","App","_s","status","setStatus","handleJoinMeeting","link","isGoogleMeet","includes","isMicrosoftTeams","style","position","minHeight","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","children","className","zIndex","backgroundColor","borderRadius","padding","maxWidth","margin","boxShadow","textAlign","fontSize","fontWeight","color","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","onSubmit","message","_c","$RefreshReg$"],"sources":["D:/meeting_bot/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport MeetingForm from './components/MeetingForm';\r\nimport StatusMessage from './components/StatusMessage';\r\n\r\nconst App = () => {\r\n  const [status, setStatus] = useState('');\r\n\r\n  const handleJoinMeeting = (link) => {\r\n    // Check if the link is valid for Google Meet or Microsoft Teams\r\n    const isGoogleMeet = link.includes('https://meet.google.com/');\r\n    const isMicrosoftTeams = link.includes('https://teams.microsoft.com/');\r\n\r\n    if (isGoogleMeet || isMicrosoftTeams) {\r\n      // Set success message if valid\r\n      setStatus('Bot has successfully joined the meeting.');\r\n    } else {\r\n      // Reset the status in case of invalid links\r\n      setStatus('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        minHeight: \"100vh\",\r\n        backgroundImage: \"url('/images/background.jpg')\",\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        backgroundRepeat: \"no-repeat\",\r\n      }}\r\n    >\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          position: \"relative\",\r\n          zIndex: 2,\r\n          backgroundColor: \"rgba(255, 255, 255, 0.9)\",\r\n          borderRadius: \"10px\",\r\n          padding: \"40px\",\r\n          maxWidth: \"600px\",\r\n          margin: \"100px auto\",\r\n          boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.25)\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <h1 style={{ fontSize: \"2.5rem\", fontWeight: \"bold\", color: \"#333\" }}>\r\n          Meeting Bot\r\n        </h1>\r\n        <p style={{ fontSize: \"1.2rem\", color: \"#555\", marginBottom: \"20px\" }}>\r\n          Paste your meeting link below to let the bot join the meeting.\r\n        </p>\r\n        <MeetingForm onSubmit={handleJoinMeeting} />\r\n        {status && <StatusMessage message={status} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMS,iBAAiB,GAAIC,IAAI,IAAK;IAClC;IACA,MAAMC,YAAY,GAAGD,IAAI,CAACE,QAAQ,CAAC,0BAA0B,CAAC;IAC9D,MAAMC,gBAAgB,GAAGH,IAAI,CAACE,QAAQ,CAAC,8BAA8B,CAAC;IAEtE,IAAID,YAAY,IAAIE,gBAAgB,EAAE;MACpC;MACAL,SAAS,CAAC,0CAA0C,CAAC;IACvD,CAAC,MAAM;MACL;MACAA,SAAS,CAAC,EAAE,CAAC;IACf;EACF,CAAC;EAED,oBACEJ,OAAA;IACEU,KAAK,EAAE;MACLC,QAAQ,EAAE,UAAU;MACpBC,SAAS,EAAE,OAAO;MAClBC,eAAe,EAAE,+BAA+B;MAChDC,cAAc,EAAE,OAAO;MACvBC,kBAAkB,EAAE,QAAQ;MAC5BC,gBAAgB,EAAE;IACpB,CAAE;IAAAC,QAAA,eAEFjB,OAAA;MACEkB,SAAS,EAAC,WAAW;MACrBR,KAAK,EAAE;QACLC,QAAQ,EAAE,UAAU;QACpBQ,MAAM,EAAE,CAAC;QACTC,eAAe,EAAE,0BAA0B;QAC3CC,YAAY,EAAE,MAAM;QACpBC,OAAO,EAAE,MAAM;QACfC,QAAQ,EAAE,OAAO;QACjBC,MAAM,EAAE,YAAY;QACpBC,SAAS,EAAE,kCAAkC;QAC7CC,SAAS,EAAE;MACb,CAAE;MAAAT,QAAA,gBAEFjB,OAAA;QAAIU,KAAK,EAAE;UAAEiB,QAAQ,EAAE,QAAQ;UAAEC,UAAU,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAZ,QAAA,EAAC;MAEtE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLjC,OAAA;QAAGU,KAAK,EAAE;UAAEiB,QAAQ,EAAE,QAAQ;UAAEE,KAAK,EAAE,MAAM;UAAEK,YAAY,EAAE;QAAO,CAAE;QAAAjB,QAAA,EAAC;MAEvE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJjC,OAAA,CAACH,WAAW;QAACsC,QAAQ,EAAE9B;MAAkB;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC3C9B,MAAM,iBAAIH,OAAA,CAACF,aAAa;QAACsC,OAAO,EAAEjC;MAAO;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/B,EAAA,CArDID,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAuDT,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}